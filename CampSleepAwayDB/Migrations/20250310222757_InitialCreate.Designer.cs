// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampSleepAwayDB.Migrations
{
    [DbContext(typeof(CampContext))]
    [Migration("20250310222757_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cabin", b =>
                {
                    b.Property<int>("CabinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CabinId"));

                    b.Property<int?>("CounselorId")
                        .HasColumnType("int");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CabinId");

                    b.HasIndex("CounselorId")
                        .IsUnique()
                        .HasFilter("[CounselorId] IS NOT NULL");

                    b.ToTable("Cabins");

                    b.HasData(
                        new
                        {
                            CabinId = 1,
                            MaxCapacity = 4,
                            Name = "Cabin 1"
                        },
                        new
                        {
                            CabinId = 2,
                            MaxCapacity = 4,
                            Name = "Cabin 2"
                        },
                        new
                        {
                            CabinId = 3,
                            MaxCapacity = 4,
                            Name = "Cabin 3"
                        });
                });

            modelBuilder.Entity("Camper", b =>
                {
                    b.Property<int>("CamperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CamperId"));

                    b.Property<int?>("CabinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CamperId");

                    b.HasIndex("CabinId");

                    b.ToTable("Campers");

                    b.HasData(
                        new
                        {
                            CamperId = 1,
                            CabinId = 1,
                            DateOfBirth = new DateTime(2015, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(667),
                            Name = "Camper 1"
                        },
                        new
                        {
                            CamperId = 2,
                            CabinId = 1,
                            DateOfBirth = new DateTime(2014, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1152),
                            Name = "Camper 2"
                        },
                        new
                        {
                            CamperId = 3,
                            CabinId = 1,
                            DateOfBirth = new DateTime(2013, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1161),
                            Name = "Camper 3"
                        },
                        new
                        {
                            CamperId = 4,
                            CabinId = 2,
                            DateOfBirth = new DateTime(2012, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1163),
                            Name = "Camper 4"
                        },
                        new
                        {
                            CamperId = 5,
                            CabinId = 2,
                            DateOfBirth = new DateTime(2011, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1166),
                            Name = "Camper 5"
                        },
                        new
                        {
                            CamperId = 6,
                            CabinId = 2,
                            DateOfBirth = new DateTime(2010, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1169),
                            Name = "Camper 6"
                        },
                        new
                        {
                            CamperId = 7,
                            CabinId = 3,
                            DateOfBirth = new DateTime(2009, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1171),
                            Name = "Camper 7"
                        },
                        new
                        {
                            CamperId = 8,
                            CabinId = 3,
                            DateOfBirth = new DateTime(2008, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1173),
                            Name = "Camper 8"
                        },
                        new
                        {
                            CamperId = 9,
                            CabinId = 3,
                            DateOfBirth = new DateTime(2007, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1176),
                            Name = "Camper 9"
                        },
                        new
                        {
                            CamperId = 10,
                            CabinId = 1,
                            DateOfBirth = new DateTime(2006, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1178),
                            Name = "Camper 10"
                        },
                        new
                        {
                            CamperId = 11,
                            CabinId = 1,
                            DateOfBirth = new DateTime(2005, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1180),
                            Name = "Camper 11"
                        },
                        new
                        {
                            CamperId = 12,
                            CabinId = 1,
                            DateOfBirth = new DateTime(2004, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1183),
                            Name = "Camper 12"
                        },
                        new
                        {
                            CamperId = 13,
                            CabinId = 2,
                            DateOfBirth = new DateTime(2003, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1185),
                            Name = "Camper 13"
                        },
                        new
                        {
                            CamperId = 14,
                            CabinId = 2,
                            DateOfBirth = new DateTime(2002, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1187),
                            Name = "Camper 14"
                        },
                        new
                        {
                            CamperId = 15,
                            CabinId = 2,
                            DateOfBirth = new DateTime(2001, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1190),
                            Name = "Camper 15"
                        },
                        new
                        {
                            CamperId = 16,
                            CabinId = 3,
                            DateOfBirth = new DateTime(2000, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1192),
                            Name = "Camper 16"
                        },
                        new
                        {
                            CamperId = 17,
                            CabinId = 3,
                            DateOfBirth = new DateTime(1999, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1194),
                            Name = "Camper 17"
                        },
                        new
                        {
                            CamperId = 18,
                            CabinId = 3,
                            DateOfBirth = new DateTime(1998, 3, 10, 23, 27, 56, 958, DateTimeKind.Local).AddTicks(1197),
                            Name = "Camper 18"
                        });
                });

            modelBuilder.Entity("Counselor", b =>
                {
                    b.Property<int>("CounselorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CounselorId"));

                    b.Property<int?>("CabinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CounselorId");

                    b.ToTable("Counselors");

                    b.HasData(
                        new
                        {
                            CounselorId = 1,
                            CabinId = 1,
                            EmploymentDate = new DateTime(2025, 3, 10, 23, 27, 56, 954, DateTimeKind.Local).AddTicks(6109),
                            Name = "Counselor 1"
                        },
                        new
                        {
                            CounselorId = 2,
                            CabinId = 2,
                            EmploymentDate = new DateTime(2025, 3, 10, 23, 27, 56, 957, DateTimeKind.Local).AddTicks(9556),
                            Name = "Counselor 2"
                        },
                        new
                        {
                            CounselorId = 3,
                            CabinId = 3,
                            EmploymentDate = new DateTime(2025, 3, 10, 23, 27, 56, 957, DateTimeKind.Local).AddTicks(9578),
                            Name = "Counselor 3"
                        });
                });

            modelBuilder.Entity("NextOfKin", b =>
                {
                    b.Property<int>("NextOfKinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NextOfKinId"));

                    b.Property<int>("CamperId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NextOfKinId");

                    b.HasIndex("CamperId");

                    b.ToTable("NextOfKins");

                    b.HasData(
                        new
                        {
                            NextOfKinId = 1,
                            CamperId = 1,
                            Name = "NextOfKin 1",
                            Relationship = "Parent"
                        },
                        new
                        {
                            NextOfKinId = 2,
                            CamperId = 2,
                            Name = "NextOfKin 2",
                            Relationship = "Parent"
                        },
                        new
                        {
                            NextOfKinId = 3,
                            CamperId = 3,
                            Name = "NextOfKin 3",
                            Relationship = "Parent"
                        },
                        new
                        {
                            NextOfKinId = 4,
                            CamperId = 4,
                            Name = "NextOfKin 4",
                            Relationship = "Parent"
                        });
                });

            modelBuilder.Entity("Cabin", b =>
                {
                    b.HasOne("Counselor", "Counselor")
                        .WithOne("Cabin")
                        .HasForeignKey("Cabin", "CounselorId");

                    b.Navigation("Counselor");
                });

            modelBuilder.Entity("Camper", b =>
                {
                    b.HasOne("Cabin", "Cabin")
                        .WithMany("Campers")
                        .HasForeignKey("CabinId");

                    b.Navigation("Cabin");
                });

            modelBuilder.Entity("NextOfKin", b =>
                {
                    b.HasOne("Camper", "Camper")
                        .WithMany("NextOfKins")
                        .HasForeignKey("CamperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camper");
                });

            modelBuilder.Entity("Cabin", b =>
                {
                    b.Navigation("Campers");
                });

            modelBuilder.Entity("Camper", b =>
                {
                    b.Navigation("NextOfKins");
                });

            modelBuilder.Entity("Counselor", b =>
                {
                    b.Navigation("Cabin")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
