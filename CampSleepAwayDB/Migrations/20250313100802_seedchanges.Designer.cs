// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampSleepAwayDB.Migrations
{
    [DbContext(typeof(CampContext))]
    [Migration("20250313100802_seedchanges")]
    partial class seedchanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cabin", b =>
                {
                    b.Property<int>("CabinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CabinId"));

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CabinId");

                    b.ToTable("Cabins");

                    b.HasData(
                        new
                        {
                            CabinId = 1,
                            MaxCapacity = 4,
                            Name = "Pine Lodge"
                        },
                        new
                        {
                            CabinId = 2,
                            MaxCapacity = 4,
                            Name = "Maple Retreat"
                        },
                        new
                        {
                            CabinId = 3,
                            MaxCapacity = 4,
                            Name = "Oak Haven"
                        });
                });

            modelBuilder.Entity("Camper", b =>
                {
                    b.Property<int>("CamperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CamperId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CamperId");

                    b.ToTable("Campers");

                    b.HasData(
                        new
                        {
                            CamperId = 1,
                            Name = "Alice Brown"
                        },
                        new
                        {
                            CamperId = 2,
                            Name = "Bob White"
                        },
                        new
                        {
                            CamperId = 3,
                            Name = "Charlie Green"
                        },
                        new
                        {
                            CamperId = 4,
                            Name = "Daisy Blue"
                        },
                        new
                        {
                            CamperId = 5,
                            Name = "Ethan Black"
                        },
                        new
                        {
                            CamperId = 6,
                            Name = "Fiona Gray"
                        },
                        new
                        {
                            CamperId = 7,
                            Name = "George Red"
                        },
                        new
                        {
                            CamperId = 8,
                            Name = "Hannah Yellow"
                        },
                        new
                        {
                            CamperId = 9,
                            Name = "Ian Purple"
                        },
                        new
                        {
                            CamperId = 10,
                            Name = "Jack Orange"
                        },
                        new
                        {
                            CamperId = 11,
                            Name = "Katie Pink"
                        },
                        new
                        {
                            CamperId = 12,
                            Name = "Liam Cyan"
                        });
                });

            modelBuilder.Entity("CamperCabinAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CabinId")
                        .HasColumnType("int");

                    b.Property<int>("CamperId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CabinId");

                    b.HasIndex("CamperId");

                    b.ToTable("CamperCabinAssignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CabinId = 1,
                            CamperId = 1,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CabinId = 1,
                            CamperId = 2,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CabinId = 1,
                            CamperId = 3,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CabinId = 1,
                            CamperId = 4,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CabinId = 2,
                            CamperId = 5,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CabinId = 2,
                            CamperId = 6,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CabinId = 2,
                            CamperId = 7,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CabinId = 2,
                            CamperId = 8,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CabinId = 3,
                            CamperId = 9,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CabinId = 3,
                            CamperId = 10,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CabinId = 3,
                            CamperId = 11,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CabinId = 3,
                            CamperId = 12,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Counselor", b =>
                {
                    b.Property<int>("CounselorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CounselorId"));

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CounselorId");

                    b.ToTable("Counselors");

                    b.HasData(
                        new
                        {
                            CounselorId = 1,
                            EmploymentDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "John Smith"
                        },
                        new
                        {
                            CounselorId = 2,
                            EmploymentDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jane Doe"
                        },
                        new
                        {
                            CounselorId = 3,
                            EmploymentDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Emily Johnson"
                        });
                });

            modelBuilder.Entity("CounselorCabinAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CabinId")
                        .HasColumnType("int");

                    b.Property<int>("CounselorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CabinId");

                    b.HasIndex("CounselorId");

                    b.ToTable("CounselorCabinAssignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CabinId = 1,
                            CounselorId = 1,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CabinId = 2,
                            CounselorId = 2,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CabinId = 3,
                            CounselorId = 3,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("NextOfKin", b =>
                {
                    b.Property<int>("NextOfKinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NextOfKinId"));

                    b.Property<int>("CamperId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NextOfKinId");

                    b.HasIndex("CamperId");

                    b.ToTable("NextOfKins");

                    b.HasData(
                        new
                        {
                            NextOfKinId = 1,
                            CamperId = 1,
                            Name = "Sarah Brown",
                            Relationship = "Parent"
                        },
                        new
                        {
                            NextOfKinId = 2,
                            CamperId = 2,
                            Name = "Tom White",
                            Relationship = "Parent"
                        },
                        new
                        {
                            NextOfKinId = 3,
                            CamperId = 3,
                            Name = "Ursula Green",
                            Relationship = "Parent"
                        },
                        new
                        {
                            NextOfKinId = 4,
                            CamperId = 4,
                            Name = "Victor Blue",
                            Relationship = "Parent"
                        });
                });

            modelBuilder.Entity("CamperCabinAssignment", b =>
                {
                    b.HasOne("Cabin", "Cabin")
                        .WithMany("CamperCabinAssignments")
                        .HasForeignKey("CabinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Camper", "Camper")
                        .WithMany("CamperCabinAssignments")
                        .HasForeignKey("CamperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabin");

                    b.Navigation("Camper");
                });

            modelBuilder.Entity("CounselorCabinAssignment", b =>
                {
                    b.HasOne("Cabin", "Cabin")
                        .WithMany("CounselorCabinAssignments")
                        .HasForeignKey("CabinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Counselor", "Counselor")
                        .WithMany("CounselorCabinAssignments")
                        .HasForeignKey("CounselorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabin");

                    b.Navigation("Counselor");
                });

            modelBuilder.Entity("NextOfKin", b =>
                {
                    b.HasOne("Camper", "Camper")
                        .WithMany("NextOfKins")
                        .HasForeignKey("CamperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camper");
                });

            modelBuilder.Entity("Cabin", b =>
                {
                    b.Navigation("CamperCabinAssignments");

                    b.Navigation("CounselorCabinAssignments");
                });

            modelBuilder.Entity("Camper", b =>
                {
                    b.Navigation("CamperCabinAssignments");

                    b.Navigation("NextOfKins");
                });

            modelBuilder.Entity("Counselor", b =>
                {
                    b.Navigation("CounselorCabinAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
